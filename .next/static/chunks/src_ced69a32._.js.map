{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soumi/Desktop/codillion-comimgsoon/coming-soon/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/soumi/Desktop/codillion-comimgsoon/coming-soon/src/components/ui/flip-words.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n\"use client\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { AnimatePresence, motion, LayoutGroup } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\n\nexport const FlipWords = ({\n  words,\n  duration = 1000,\n  className,\n}: {\n  words: string[];\n  duration?: number;\n  className?: string;\n}) => {\n  const [currentWord, setCurrentWord] = useState(words[0]);\n  const [isAnimating, setIsAnimating] = useState<boolean>(false);\n\n  // thanks for the fix Julian - https://github.com/Julian-AT\n  const startAnimation = useCallback(() => {\n    const word = words[words.indexOf(currentWord) + 1] || words[0];\n    setCurrentWord(word);\n    setIsAnimating(true);\n  }, [currentWord, words]);\n\n  useEffect(() => {\n    if (!isAnimating)\n      setTimeout(() => {\n        startAnimation();\n      }, duration);\n  }, [isAnimating, duration, startAnimation]);\n\n  return (\n    <AnimatePresence\n      onExitComplete={() => {\n        setIsAnimating(false);\n      }}\n    >\n      <motion.div\n        initial={{\n          opacity: 0,\n          y: 10,\n        }}\n        animate={{\n          opacity: 1,\n          y: 0,\n        }}\n        transition={{\n          type: \"spring\",\n          stiffness: 100,\n          damping: 10,\n        }}\n        exit={{\n          opacity: 0,\n          y: -40,\n          x: 40,\n          filter: \"blur(8px)\",\n          scale: 2,\n          position: \"absolute\",\n        }}\n        className={cn(\n          \"z-10 inline-block relative text-left text-neutral-900 dark:text-neutral-100 px-2\",\n          className\n        )}\n        key={currentWord}\n      >\n        {/* edit suggested by Sajal: https://x.com/DewanganSajal */}\n        {currentWord.split(\" \").map((word, wordIndex) => (\n          <motion.span\n            key={word + wordIndex}\n            initial={{ opacity: 0, y: 10, filter: \"blur(8px)\" }}\n            animate={{ opacity: 1, y: 0, filter: \"blur(0px)\" }}\n            transition={{\n              delay: wordIndex * 0.3,\n              duration: 0.3,\n            }}\n            className=\"inline-block whitespace-nowrap\"\n          >\n            {word.split(\"\").map((letter, letterIndex) => (\n              <motion.span\n                key={word + letterIndex}\n                initial={{ opacity: 0, y: 10, filter: \"blur(8px)\" }}\n                animate={{ opacity: 1, y: 0, filter: \"blur(0px)\" }}\n                transition={{\n                  delay: wordIndex * 0.3 + letterIndex * 0.05,\n                  duration: 0.2,\n                }}\n                className=\"inline-block\"\n              >\n                {letter}\n              </motion.span>\n            ))}\n            <span className=\"inline-block\">&nbsp;</span>\n          </motion.span>\n        ))}\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n"],"names":[],"mappings":"AAAA,oDAAoD;;;;AAEpD;AACA;AAAA;AACA;;;AAHA;;;;AAKO,MAAM,YAAY,CAAC,EACxB,KAAK,EACL,WAAW,IAAI,EACf,SAAS,EAKV;;IACC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,CAAC,EAAE;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAExD,2DAA2D;IAC3D,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;iDAAE;YACjC,MAAM,OAAO,KAAK,CAAC,MAAM,OAAO,CAAC,eAAe,EAAE,IAAI,KAAK,CAAC,EAAE;YAC9D,eAAe;YACf,eAAe;QACjB;gDAAG;QAAC;QAAa;KAAM;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,IAAI,CAAC,aACH;uCAAW;oBACT;gBACF;sCAAG;QACP;8BAAG;QAAC;QAAa;QAAU;KAAe;IAE1C,qBACE,6LAAC,4LAAA,CAAA,kBAAe;QACd,gBAAgB;YACd,eAAe;QACjB;kBAEA,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;YACT,SAAS;gBACP,SAAS;gBACT,GAAG;YACL;YACA,SAAS;gBACP,SAAS;gBACT,GAAG;YACL;YACA,YAAY;gBACV,MAAM;gBACN,WAAW;gBACX,SAAS;YACX;YACA,MAAM;gBACJ,SAAS;gBACT,GAAG,CAAC;gBACJ,GAAG;gBACH,QAAQ;gBACR,OAAO;gBACP,UAAU;YACZ;YACA,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oFACA;sBAKD,YAAY,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,0BACjC,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;oBAEV,SAAS;wBAAE,SAAS;wBAAG,GAAG;wBAAI,QAAQ;oBAAY;oBAClD,SAAS;wBAAE,SAAS;wBAAG,GAAG;wBAAG,QAAQ;oBAAY;oBACjD,YAAY;wBACV,OAAO,YAAY;wBACnB,UAAU;oBACZ;oBACA,WAAU;;wBAET,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,QAAQ,4BAC3B,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;gCAEV,SAAS;oCAAE,SAAS;oCAAG,GAAG;oCAAI,QAAQ;gCAAY;gCAClD,SAAS;oCAAE,SAAS;oCAAG,GAAG;oCAAG,QAAQ;gCAAY;gCACjD,YAAY;oCACV,OAAO,YAAY,MAAM,cAAc;oCACvC,UAAU;gCACZ;gCACA,WAAU;0CAET;+BATI,OAAO;;;;;sCAYhB,6LAAC;4BAAK,WAAU;sCAAe;;;;;;;mBAvB1B,OAAO;;;;;WALX;;;;;;;;;;AAkCb;GA5Fa;KAAA","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}